% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{write_png_core}
\alias{write_png_core}
\title{Write a numeric matrix or array to a PNG file}
\usage{
write_png_core(vec, dims, filename, convert_to_row_major = TRUE,
  flipy = FALSE, intensity_factor = 1, pal = NULL)
}
\arguments{
\item{vec}{numeric 2d matrix or 3d array (with 3 planes)}

\item{dims}{integer vector of length 2 i.e. \code{c(nrow, ncol)} for a matrix/grey image and of
length 3 i.e \code{c(nrow, ncol, 3)} for array/RGB output.}

\item{filename}{output filename e.g. "example.ppm"}

\item{convert_to_row_major}{Convert to row-major order before output. R stores matrix
and array data in column-major order. In order to output row-major order (as
expected by PGM/PPM image format) data ordering must be converted. If this argument
is set to FALSE, then image output will be faster (due to fewer data-ordering operations, and
better cache coherency) but the image will be transposed. Default: TRUE}

\item{flipy}{By default, the position [0, 0] is considered the top-left corner of the output image.
Set flipy = TRUE for [0, 0] to represent the bottom-left corner.  This operation
is very fast and has negligible impact on overall write speed.
Default: flipy = FALSE.}

\item{intensity_factor}{Multiplication factor applied to all values in image
(note: no checking is performed to ensure values remain in range [0, 1]).
If intensity_factor <= 0, then automatically determine (and apply) a multiplication factor
to set the maximum value to 1.0. Default: intensity_factor = 1.0}

\item{pal}{integer matrix of size 256x3 with values in the range [0, 255]. Each
row represents the r, g, b colour for a given grey index value. Only used
if \code{data} is a matrix}
}
\description{
Write a numeric matrix or array to a PNG file
}
\details{
Write a numeric matrix or array to a PNG file as fast as possible - meaning
that corners are cut to make it happen quickly:

\itemize{
\item{Data is not compressed.}
\item{Matrix or array must be of type \code{numeric}}
}

Design decisions

\itemize{
\item{no PNG pixel filtering}
\item{no compression}
\item{each IDAT contains one-and-only-one deflate block.  This is purely for
   my convenience. Most other PNG writers have the IDAT and DEFLATE blocks
   update independently i.e. usually 1 DEFLATE block would span multiple IDATs.
   By having a one-to-one correspondence between DEFLATE blocks and IDAT
   chunks, the complexity of the code is greatly reduced}
\item{All DEFLATE windows are hard-coded to the maximum size of 32kb. Varying
   the specified window size might be useful on embedded systems with little
   memory, but not for this use case.}
}
}
